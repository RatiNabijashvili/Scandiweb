{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ratin\\\\Desktop\\\\Job\\\\task\\\\src\\\\cart\\\\cartComponents\\\\CartComponent.jsx\";\nimport React from 'react';\nimport Styles from './cartComponent.module.css';\nimport Context from '../../Context';\nimport { client } from '../../index';\nimport { gql } from '@apollo/client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass CartComponent extends React.Component {\n  constructor() {\n    super();\n\n    this.test = () => {\n      if (this.state.data) {\n        console.log(this.state.data.product.brand);\n      } else {\n        console.log('error');\n      }\n    };\n\n    this.state = {\n      data: undefined,\n      selectedAttributes: {}\n    };\n  }\n\n  componentDidMount() {\n    client.query({\n      query: gql`\n          query {\n            product(id: \"${this.props.item}\") {\n              id\n                name\n              brand\n              inStock\n              gallery\n               __typename\n              attributes{\n                id\n                items {\n                  value\n                }\n              }\n              prices {\n                amount\n                  currency{\n                    symbol\n                    label\n                  }\n                }\n              description\n            }\n          }\n        `\n    }).then(result => this.setState({\n      data: result.data\n    }));\n  }\n\n  render() {\n    const {\n      removeFromCart\n    } = this.context;\n    const {\n      addToCart\n    } = this.context;\n    const {\n      index\n    } = this.context;\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      className: Styles['description-container'],\n      children: this.state.data && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: Styles.brand,\n            children: this.state.data.product.brand\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: Styles.name,\n            children: this.state.data.product.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: Styles.price,\n            children: [this.state.data.product.prices[index].currency.symbol, this.state.data.product.prices[index].amount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: Styles['value-container'],\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: this.state.data && this.state.data.product.attributes.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                  className: Styles.text,\n                  children: [item.id, \":\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: Styles['color-container'],\n                  children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                    className: Styles['item-list'],\n                    children: item.id === 'Color' ? item.items.map(value => /*#__PURE__*/_jsxDEV(\"li\", {\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: `${Styles.color} ${value.value === this.state.selectedAttributes['color'] ? Styles['current-color'] : ''}`,\n                        style: {\n                          backgroundColor: `${value.value}`\n                        },\n                        onClick: () => this.setState({\n                          selectedAttributes: { ...this.state.selectedAttributes,\n                            color: value.value\n                          }\n                        })\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 85,\n                        columnNumber: 37\n                      }, this)\n                    }, value.value, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 84,\n                      columnNumber: 35\n                    }, this)) : item.items.map(value => /*#__PURE__*/_jsxDEV(\"li\", {\n                      children: /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: `${Styles.value} ${value.value === this.state.selectedAttributes[item.id] ? Styles['current-value'] : ' '}`,\n                        onClick: () => {\n                          this.setState({\n                            selectedAttributes: { ...this.state.selectedAttributes,\n                              [item.id]: value.value\n                            }\n                          });\n                        },\n                        children: value.value\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 108,\n                        columnNumber: 37\n                      }, this)\n                    }, value.value, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 107,\n                      columnNumber: 35\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 81,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 25\n                }, this)]\n              }, item.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: Styles['right-side'],\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: Styles['quantity-container'],\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: Styles.btn,\n              onClick: () => addToCart(this.props.addToCartItem),\n              children: \"+\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: Styles.quantity,\n              children: this.props.itemQuantity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => removeFromCart(this.props.removeFromCartItem),\n              className: Styles.btn,\n              children: \"-\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: this.test,\n              children: \"test\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: this.props.itemImg,\n            className: Styles.img\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nCartComponent.contextType = Context;\nexport default CartComponent;","map":{"version":3,"names":["React","Styles","Context","client","gql","CartComponent","Component","constructor","test","state","data","console","log","product","brand","undefined","selectedAttributes","componentDidMount","query","props","item","then","result","setState","render","removeFromCart","context","addToCart","index","name","price","prices","currency","symbol","amount","attributes","map","text","id","items","value","color","backgroundColor","btn","addToCartItem","quantity","itemQuantity","removeFromCartItem","itemImg","img","contextType"],"sources":["C:/Users/Ratin/Desktop/Job/task/src/cart/cartComponents/CartComponent.jsx"],"sourcesContent":["import React from 'react'\r\nimport Styles from './cartComponent.module.css'\r\nimport Context from '../../Context'\r\nimport { client } from '../../index'\r\nimport { gql } from '@apollo/client'\r\n\r\nclass CartComponent extends React.Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      data: undefined,\r\n      selectedAttributes: {},\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    client\r\n      .query({\r\n        query: gql`\r\n          query {\r\n            product(id: \"${this.props.item}\") {\r\n              id\r\n                name\r\n              brand\r\n              inStock\r\n              gallery\r\n               __typename\r\n              attributes{\r\n                id\r\n                items {\r\n                  value\r\n                }\r\n              }\r\n              prices {\r\n                amount\r\n                  currency{\r\n                    symbol\r\n                    label\r\n                  }\r\n                }\r\n              description\r\n            }\r\n          }\r\n        `,\r\n      })\r\n      .then((result) =>\r\n        this.setState({\r\n          data: result.data,\r\n        })\r\n      )\r\n  }\r\n\r\n  test = () => {\r\n    if (this.state.data) {\r\n      console.log(this.state.data.product.brand)\r\n    } else {\r\n      console.log('error')\r\n    }\r\n  }\r\n  render() {\r\n    const { removeFromCart } = this.context\r\n    const { addToCart } = this.context\r\n    const { index } = this.context\r\n    return (\r\n      <li className={Styles['description-container']}>\r\n        {this.state.data && (\r\n          <>\r\n            <div>\r\n              <h2 className={Styles.brand}>{this.state.data.product.brand}</h2>\r\n              <h2 className={Styles.name}>{this.state.data.product.name}</h2>\r\n              <h2 className={Styles.price}>\r\n                {this.state.data.product.prices[index].currency.symbol}\r\n                {this.state.data.product.prices[index].amount}\r\n              </h2>\r\n              <div className={Styles['value-container']}>\r\n                <ul>\r\n                  {this.state.data &&\r\n                    this.state.data.product.attributes.map((item) => (\r\n                      <li key={item.id}>\r\n                        <h2 className={Styles.text}>{item.id}:</h2>\r\n                        <div className={Styles['color-container']}>\r\n                          <ul className={Styles['item-list']}>\r\n                            {item.id === 'Color'\r\n                              ? item.items.map((value) => (\r\n                                  <li key={value.value}>\r\n                                    <div\r\n                                      className={`${Styles.color} ${\r\n                                        value.value ===\r\n                                        this.state.selectedAttributes['color']\r\n                                          ? Styles['current-color']\r\n                                          : ''\r\n                                      }`}\r\n                                      style={{\r\n                                        backgroundColor: `${value.value}`,\r\n                                      }}\r\n                                      onClick={() =>\r\n                                        this.setState({\r\n                                          selectedAttributes: {\r\n                                            ...this.state.selectedAttributes,\r\n                                            color: value.value,\r\n                                          },\r\n                                        })\r\n                                      }\r\n                                    ></div>\r\n                                  </li>\r\n                                ))\r\n                              : item.items.map((value) => (\r\n                                  <li key={value.value}>\r\n                                    <span\r\n                                      className={`${Styles.value} ${\r\n                                        value.value ===\r\n                                        this.state.selectedAttributes[item.id]\r\n                                          ? Styles['current-value']\r\n                                          : ' '\r\n                                      }`}\r\n                                      onClick={() => {\r\n                                        this.setState({\r\n                                          selectedAttributes: {\r\n                                            ...this.state.selectedAttributes,\r\n                                            [item.id]: value.value,\r\n                                          },\r\n                                        })\r\n                                      }}\r\n                                    >\r\n                                      {value.value}\r\n                                    </span>\r\n                                  </li>\r\n                                ))}\r\n                          </ul>\r\n                        </div>\r\n                      </li>\r\n                    ))}\r\n                </ul>\r\n              </div>\r\n            </div>\r\n            <div className={Styles['right-side']}>\r\n              <div className={Styles['quantity-container']}>\r\n                <button\r\n                  className={Styles.btn}\r\n                  onClick={() => addToCart(this.props.addToCartItem)}\r\n                >\r\n                  +\r\n                </button>\r\n                <h2 className={Styles.quantity}>{this.props.itemQuantity}</h2>\r\n                <button\r\n                  onClick={() => removeFromCart(this.props.removeFromCartItem)}\r\n                  className={Styles.btn}\r\n                >\r\n                  -\r\n                </button>\r\n\r\n                <button onClick={this.test}>test</button>\r\n              </div>\r\n              <img src={this.props.itemImg} className={Styles.img} />\r\n            </div>\r\n          </>\r\n        )}\r\n      </li>\r\n    )\r\n  }\r\n}\r\n\r\nCartComponent.contextType = Context\r\n\r\nexport default CartComponent\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}