{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ratin\\\\Desktop\\\\Job\\\\task\\\\src\\\\nav\\\\cartDropDown\\\\cartDropDownElements.jsx\";\nimport React from 'react';\nimport Context from '../../Context';\nimport { client } from '../../index';\nimport { gql } from '@apollo/client';\nimport Styles from './cartDropDownElements.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass CartDropDownElements extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      data: undefined,\n      selectedAttributes: {}\n    };\n  }\n\n  componentDidMount() {\n    client.query({\n      query: gql`\n          query {\n            product(id: \"${this.props.item}\") {\n              id\n                name\n              brand\n              inStock\n              gallery\n               __typename\n              attributes{\n                id\n                items {\n                  value\n                }\n              }\n              prices {\n                amount\n                  currency{\n                    symbol\n                    label\n                  }\n                }\n              description\n            }\n          }\n        `\n    }).then(result => this.setState({\n      data: result.data\n    }));\n  }\n\n  render() {\n    const {\n      removeFromCart\n    } = this.context;\n    const {\n      addToCart\n    } = this.context;\n    const {\n      index\n    } = this.context;\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      className: Styles['description-container'],\n      children: this.state.data && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: Styles['text-div'],\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: Styles.brand,\n              children: this.state.data.product.brand\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: Styles.name,\n              children: this.state.data.product.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: Styles.price,\n              children: [this.state.data.product.prices[index].currency.symbol, this.state.data.product.prices[index].amount]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: Styles['value-container'],\n              children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: this.state.data && this.state.data.product.attributes.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                    className: Styles.text,\n                    children: [item.id, \":\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 77,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: Styles['color-container'],\n                    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                      className: Styles['item-list'],\n                      children: item.id === 'Color' ? item.items.map(value => /*#__PURE__*/_jsxDEV(\"li\", {\n                        children: /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: `${Styles.color} ${value.value === this.state.selectedAttributes['color'] ? Styles['current-color'] : ''}`,\n                          style: {\n                            backgroundColor: `${value.value}`\n                          },\n                          onClick: () => this.setState({\n                            selectedAttributes: { ...this.state.selectedAttributes,\n                              color: value.value\n                            }\n                          })\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 83,\n                          columnNumber: 39\n                        }, this)\n                      }, value.value, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 82,\n                        columnNumber: 37\n                      }, this)) : item.items.map(value => /*#__PURE__*/_jsxDEV(\"li\", {\n                        children: /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: `${Styles.value} ${value.value === this.state.selectedAttributes[item.id] ? Styles['current-value'] : ' '}`,\n                          onClick: () => {\n                            this.setState({\n                              selectedAttributes: { ...this.state.selectedAttributes,\n                                [item.id]: value.value\n                              }\n                            });\n                          },\n                          children: value.value\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 106,\n                          columnNumber: 39\n                        }, this)\n                      }, value.value, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 105,\n                        columnNumber: 37\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 79,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 78,\n                    columnNumber: 27\n                  }, this)]\n                }, item.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: Styles['right-side'],\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: Styles['quantity-container'],\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: Styles.btn,\n              onClick: () => addToCart(this.props.addToCartItem),\n              children: \"+\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: Styles.quantity,\n              children: this.props.itemQuantity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => removeFromCart(this.props.removeFromCartItem),\n              className: Styles.btn,\n              children: \"-\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: this.state.data.product.gallery[0],\n            className: Styles.img\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nCartDropDownElements.contextType = Context;\nexport default CartDropDownElements;","map":{"version":3,"names":["React","Context","client","gql","Styles","CartDropDownElements","Component","constructor","state","data","undefined","selectedAttributes","componentDidMount","query","props","item","then","result","setState","render","removeFromCart","context","addToCart","index","brand","product","name","price","prices","currency","symbol","amount","attributes","map","text","id","items","value","color","backgroundColor","btn","addToCartItem","quantity","itemQuantity","removeFromCartItem","gallery","img","contextType"],"sources":["C:/Users/Ratin/Desktop/Job/task/src/nav/cartDropDown/cartDropDownElements.jsx"],"sourcesContent":["import React from 'react'\r\nimport Context from '../../Context'\r\nimport { client } from '../../index'\r\nimport { gql } from '@apollo/client'\r\nimport Styles from './cartDropDownElements.module.css'\r\n\r\nclass CartDropDownElements extends React.Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      data: undefined,\r\n      selectedAttributes: {},\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    client\r\n      .query({\r\n        query: gql`\r\n          query {\r\n            product(id: \"${this.props.item}\") {\r\n              id\r\n                name\r\n              brand\r\n              inStock\r\n              gallery\r\n               __typename\r\n              attributes{\r\n                id\r\n                items {\r\n                  value\r\n                }\r\n              }\r\n              prices {\r\n                amount\r\n                  currency{\r\n                    symbol\r\n                    label\r\n                  }\r\n                }\r\n              description\r\n            }\r\n          }\r\n        `,\r\n      })\r\n      .then((result) =>\r\n        this.setState({\r\n          data: result.data,\r\n        })\r\n      )\r\n  }\r\n\r\n  render() {\r\n    const { removeFromCart } = this.context\r\n    const { addToCart } = this.context\r\n    const { index } = this.context\r\n    return (\r\n      <li className={Styles['description-container']}>\r\n        {this.state.data && (\r\n          <>\r\n            <div className={Styles['text-div']}>\r\n              <div>\r\n                <h2 className={Styles.brand}>\r\n                  {this.state.data.product.brand}\r\n                </h2>\r\n                <h2 className={Styles.name}>{this.state.data.product.name}</h2>\r\n              </div>\r\n              <div>\r\n                <h2 className={Styles.price}>\r\n                  {this.state.data.product.prices[index].currency.symbol}\r\n                  {this.state.data.product.prices[index].amount}\r\n                </h2>\r\n                <div className={Styles['value-container']}>\r\n                  <ul>\r\n                    {this.state.data &&\r\n                      this.state.data.product.attributes.map((item) => (\r\n                        <li key={item.id}>\r\n                          <h2 className={Styles.text}>{item.id}:</h2>\r\n                          <div className={Styles['color-container']}>\r\n                            <ul className={Styles['item-list']}>\r\n                              {item.id === 'Color'\r\n                                ? item.items.map((value) => (\r\n                                    <li key={value.value}>\r\n                                      <div\r\n                                        className={`${Styles.color} ${\r\n                                          value.value ===\r\n                                          this.state.selectedAttributes['color']\r\n                                            ? Styles['current-color']\r\n                                            : ''\r\n                                        }`}\r\n                                        style={{\r\n                                          backgroundColor: `${value.value}`,\r\n                                        }}\r\n                                        onClick={() =>\r\n                                          this.setState({\r\n                                            selectedAttributes: {\r\n                                              ...this.state.selectedAttributes,\r\n                                              color: value.value,\r\n                                            },\r\n                                          })\r\n                                        }\r\n                                      ></div>\r\n                                    </li>\r\n                                  ))\r\n                                : item.items.map((value) => (\r\n                                    <li key={value.value}>\r\n                                      <span\r\n                                        className={`${Styles.value} ${\r\n                                          value.value ===\r\n                                          this.state.selectedAttributes[item.id]\r\n                                            ? Styles['current-value']\r\n                                            : ' '\r\n                                        }`}\r\n                                        onClick={() => {\r\n                                          this.setState({\r\n                                            selectedAttributes: {\r\n                                              ...this.state.selectedAttributes,\r\n                                              [item.id]: value.value,\r\n                                            },\r\n                                          })\r\n                                        }}\r\n                                      >\r\n                                        {value.value}\r\n                                      </span>\r\n                                    </li>\r\n                                  ))}\r\n                            </ul>\r\n                          </div>\r\n                        </li>\r\n                      ))}\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className={Styles['right-side']}>\r\n              <div className={Styles['quantity-container']}>\r\n                <button\r\n                  className={Styles.btn}\r\n                  onClick={() => addToCart(this.props.addToCartItem)}\r\n                >\r\n                  +\r\n                </button>\r\n                <h2 className={Styles.quantity}>{this.props.itemQuantity}</h2>\r\n                <button\r\n                  onClick={() => removeFromCart(this.props.removeFromCartItem)}\r\n                  className={Styles.btn}\r\n                >\r\n                  -\r\n                </button>\r\n              </div>\r\n              <img\r\n                src={this.state.data.product.gallery[0]}\r\n                className={Styles.img}\r\n              />\r\n            </div>\r\n          </>\r\n        )}\r\n      </li>\r\n    )\r\n  }\r\n}\r\n\r\nCartDropDownElements.contextType = Context\r\n\r\nexport default CartDropDownElements\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}